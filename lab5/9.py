import re  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π

def camel_to_snake(text):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º re.sub() –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ "_" –ø–µ—Ä–µ–¥ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π
    return re.sub(r'(?<!^)(?=[A-Z])', '_', text).lower()

# –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã
print(camel_to_snake("camelCaseExample"))  # ‚úÖ 'camel_case_example'
print(camel_to_snake("thisIsATest"))       # ‚úÖ 'this_is_a_test'
print(camel_to_snake("PythonProgramming")) # ‚úÖ 'python_programming'

# üîπ –†–∞–∑–±–æ—Ä —à–∞–±–ª–æ–Ω–∞ r'(?<!^)(?=[A-Z])'
# (?<!^)  ‚Üí "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–∑–∞–¥" (negative lookbehind)
#           –£–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ –ø–µ—Ä–µ–¥ –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤–æ–π –ù–ï–¢ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏ (^).
#           –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–µ—Ä–≤–∞—è –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
#
# (?=[A-Z]) ‚Üí "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–ø–µ—Ä–µ–¥" (positive lookahead)
#             –ù–∞—Ö–æ–¥–∏—Ç –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã (A-Z), –Ω–æ –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç –∏—Ö –≤ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ.
#             –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å "_" –ø–µ—Ä–µ–¥ –Ω–∏–º–∏, –Ω–µ –∑–∞–º–µ–Ω—è—è —Å–∞–º–∏ –±—É–∫–≤—ã.
#
# .lower()  ‚Üí –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—Å—é —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏ "_".